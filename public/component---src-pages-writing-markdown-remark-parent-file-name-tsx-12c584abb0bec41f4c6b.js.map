{"version":3,"file":"component---src-pages-writing-markdown-remark-parent-file-name-tsx-12c584abb0bec41f4c6b.js","mappings":"mWACWA,EAAO,8BACPC,EAAe,sCACfC,EAAO,8BACPC,EAAc,qCACdC,EAAQ,+BACRC,EAAU,iCC2BrB,MA5BgBC,IAAmB,IAAlB,KAAEC,GAAW,EAC5B,MAAMC,EAAOD,EAAKE,eAAeC,YAEjC,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAAA,MAAAA,CAAKE,UAAWC,GACdH,EAAAA,cAAAA,KAAAA,CAAIE,UAAWC,GAAa,IAAMN,EAAKO,MAAK,KAAKP,EAAKJ,OACtDO,EAAAA,cAAAA,IAAAA,CAAGE,UAAWC,GAAcN,EAAKR,MACjCW,EAAAA,cAAAA,MAAAA,CAAKE,UAAWC,GACdH,EAAAA,cAACK,EAAAA,EAAW,CACVC,OAAOC,EAAAA,EAAAA,GAASV,EAAKW,eACrBC,IAAKZ,EAAKJ,SAGdO,EAAAA,cAAAA,MAAAA,CACEU,wBAAyB,CAAEC,OAAQf,EAAKE,eAAec,MACvDV,UAAWL,EAAKW,eAAiBL,IAEnCH,EAAAA,cAAAA,MAAAA,CAAKE,UAAWC,GACbN,EAAKgB,KAAKC,KAAKC,GACdf,EAAAA,cAAAA,OAAAA,CAAME,UAAWC,EAAAA,KAAY,IAAEY,OAI9B,C","sources":["webpack://peach-jam/./src/pages/writing/writing.module.scss","webpack://peach-jam/./src/pages/writing/{MarkdownRemark.parent__(File)__name}.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var date = \"writing-module--date--64123\";\nexport var imageWrapper = \"writing-module--imageWrapper--909e4\";\nexport var main = \"writing-module--main--4c752\";\nexport var tagsWrapper = \"writing-module--tagsWrapper--4ad9f\";\nexport var title = \"writing-module--title--0fff6\";\nexport var wrapper = \"writing-module--wrapper--eca17\";","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage, getImage, IGatsbyImageData } from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout/Layout\";\nimport * as styles from \"./writing.module.scss\";\nconst Writing = ({ data }: any) => {\n  const post = data.markdownRemark.frontmatter;\n\n  return (\n    <Layout>\n      <div className={styles.wrapper}>\n        <h1 className={styles.title}>{`[${post.topic}] ${post.title}`}</h1>\n        <p className={styles.date}>{post.date}</p>\n        <div className={styles.imageWrapper}>\n          <GatsbyImage\n            image={getImage(post.featuredImage) as IGatsbyImageData}\n            alt={post.title}\n          />\n        </div>\n        <div\n          dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }}\n          className={post.featuredImage && styles.main}\n        />\n        <div className={styles.tagsWrapper}>\n          {post.tags.map((tag: string) => (\n            <span className={styles.tag}>#{tag}</span>\n          ))}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Writing;\n\nexport const query = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        date(formatString: \"YYYY-MM-DD\")\n        title\n        tags\n        topic\n        featuredImage {\n          childImageSharp {\n            gatsbyImageData(width: 250)\n          }\n        }\n      }\n      html\n    }\n  }\n`;\n"],"names":["date","imageWrapper","main","tagsWrapper","title","wrapper","_ref","data","post","markdownRemark","frontmatter","React","Layout","className","styles","topic","GatsbyImage","image","getImage","featuredImage","alt","dangerouslySetInnerHTML","__html","html","tags","map","tag"],"sourceRoot":""}