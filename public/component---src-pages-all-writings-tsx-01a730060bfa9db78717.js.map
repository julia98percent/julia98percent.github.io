{"version":3,"file":"component---src-pages-all-writings-tsx-01a730060bfa9db78717.js","mappings":"wNA2CA,MAnCoBA,IAAmB,IAAlB,KAAEC,GAAW,EAChC,MAAMC,EAAiBD,EAAKE,YAAYC,MACxC,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAAA,OAAAA,CAAME,UAAWC,EAAAA,IACfH,EAAAA,cAAAA,QAAAA,KAAO,aACPA,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,IAAAA,CAAGE,UAAWC,EAAAA,IAAmB,QAChCN,EAAeO,KAAI,CAACC,EAA4BC,KAC/C,MAAM,cAAEC,GAAkBF,EAAKG,YAE/B,OACER,EAAAA,cAAAA,MAAAA,CAAKE,UAAWC,EAAAA,IACdH,EAAAA,cAACS,EAAAA,GAAI,CAACC,GAAE,YAAcL,EAAKG,YAAYG,KAAQC,IAAKN,GAClDN,EAAAA,cAACa,EAAAA,EAAS,CACRC,MAAOT,EAAKG,YAAYM,MACxBC,MAAUV,EAAKG,YAAYM,MAAK,eAChCE,UAAWX,EAAKG,YAAYS,KAAKC,MAAM,EAAG,IAC1CC,KAAMd,EAAKG,YAAYW,KACvBC,OACEb,EACIA,aAAa,EAAbA,EAAec,gBAAgBC,gBAC/BC,EAAAA,KAIN,MAKP,C,+ECWb,MAtCkB5B,IAMK,IANJ,MACjBmB,EAAK,OACLM,EAAM,MACNL,EAAK,UACLC,EAAS,KACTG,GACe,EAaf,OACEnB,EAAAA,cAAAA,MAAAA,CAAKE,UC3BY,oCDcQkB,IACrB,aAAOA,EACF,KAEa,iBAAXA,EACFpB,EAAAA,cAACwB,EAAAA,EAAW,CAACC,OAAOC,EAAAA,EAAAA,GAASN,GAASO,IAAKb,IAE9B,iBAAXM,EACFpB,EAAAA,cAAAA,MAAAA,CAAK4B,IAAKR,SADnB,EAOGS,CAAkBT,GACnBpB,EAAAA,cAAAA,MAAAA,CAAKE,UChCQ,kCDiCXF,EAAAA,cAAAA,KAAAA,KAAKc,GACLd,EAAAA,cAAAA,IAAAA,CAAGE,UCnCQ,kCDmCkBa,GAC7Bf,EAAAA,cAAAA,MAAAA,CAAKE,UCjCK,iCDkCRF,EAAAA,cAAAA,OAAAA,KAAOgB,IACNG,aAAI,EAAJA,EAAMW,QAAS,GACdX,EAAKf,KAAI,CAAC2B,EAAKzB,IACbN,EAAAA,cAAAA,KAAAA,CAAIE,UCtCD,+BDsCwBU,IAAKmB,EAAMzB,GAAO,IACzCyB,OAKR,C,wGE9CH,IAAIC,EAAa,kCACbC,EAAmB,wCACnBC,EAAU,8B,uBCHrB,IAAe,IAA0B,mD","sources":["webpack://peach-jam/./src/pages/allWritings.tsx","webpack://peach-jam/./src/templates/Thumbnail/Thumbnail.tsx","webpack://peach-jam/./src/templates/Thumbnail/Thumbnail.module.scss","webpack://peach-jam/./src/pages/index.module.scss","webpack://peach-jam/./writing-thumbnail-image/peach.png"],"sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Thumbnail from \"../templates/Thumbnail\";\n\nimport * as styles from \"./index.module.scss\";\nimport Peach from \"../../writing-thumbnail-image/peach.png\";\nimport Layout from \"../components/Layout\";\n\nconst allWritings = ({ data }: any) => {\n  const recentWritings = data.allWritings.nodes;\n  return (\n    <Layout>\n      <main className={styles.wrapper}>\n        <title>Home Page</title>\n        <div>\n          <p className={styles.recentText}>모든 글</p>\n          {recentWritings.map((item: { frontmatter: any }, index: string) => {\n            const { featuredImage } = item.frontmatter;\n\n            return (\n              <div className={styles.thumbnailWrapper}>\n                <Link to={`/writing/${item.frontmatter.slug}`} key={index}>\n                  <Thumbnail\n                    title={item.frontmatter.title}\n                    entry={`${item.frontmatter.title}은 엄청나게 중요합니당`}\n                    createdAt={item.frontmatter.date.slice(0, 10)}\n                    tags={item.frontmatter.tags}\n                    avatar={\n                      featuredImage\n                        ? featuredImage?.childImageSharp.gatsbyImageData\n                        : Peach\n                    }\n                  />\n                </Link>\n              </div>\n            );\n          })}\n        </div>\n      </main>\n    </Layout>\n  );\n};\n\nexport default allWritings;\n\nexport const query = graphql`\n  {\n    allWritings: allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        frontmatter {\n          title\n          date\n          tags\n          slug\n          featuredImage {\n            childImageSharp {\n              gatsbyImageData(width: 200)\n            }\n          }\n        }\n        parent {\n          ... on File {\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { GatsbyImage, getImage, ImageDataLike } from \"gatsby-plugin-image\";\nimport * as styles from \"./Thumbnail.module.scss\";\n\nexport interface ThumbnailProps {\n  title: string;\n  avatar?: ImageDataLike;\n  entry: string;\n  createdAt: string;\n  tags: string[] | [];\n}\n\nconst Thumbnail = ({\n  title,\n  avatar,\n  entry,\n  createdAt,\n  tags,\n}: ThumbnailProps) => {\n  const getThumbnailImage = (avatar: any) => {\n    if (typeof avatar === null || typeof avatar === undefined) {\n      return null;\n    }\n    if (typeof avatar === \"object\") {\n      return <GatsbyImage image={getImage(avatar)} alt={title} />;\n    }\n    if (typeof avatar === \"string\") {\n      return <img src={avatar} />;\n    }\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      {getThumbnailImage(avatar)}\n      <div className={styles.right}>\n        <h3>{title}</h3>\n        <p className={styles.entry}>{entry}</p>\n        <div className={styles.tags}>\n          <span>{createdAt}</span>\n          {tags?.length > 0 &&\n            tags.map((tag, index) => (\n              <h6 className={styles.tag} key={tag + index}>\n                #{tag}\n              </h6>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Thumbnail;\n","// extracted by mini-css-extract-plugin\nexport var entry = \"Thumbnail-module--entry--d348b\";\nexport var right = \"Thumbnail-module--right--b816f\";\nexport var tag = \"Thumbnail-module--tag--a827a\";\nexport var tags = \"Thumbnail-module--tags--aa340\";\nexport var wrapper = \"Thumbnail-module--wrapper--5e4b1\";","// extracted by mini-css-extract-plugin\nexport var recentText = \"index-module--recentText--f8a44\";\nexport var thumbnailWrapper = \"index-module--thumbnailWrapper--c864a\";\nexport var wrapper = \"index-module--wrapper--8d8a2\";","export default __webpack_public_path__ + \"static/peach-87a29fb72d4a5ace9c02d136947c0a8c.png\";"],"names":["_ref","data","recentWritings","allWritings","nodes","React","Layout","className","styles","map","item","index","featuredImage","frontmatter","Link","to","slug","key","Thumbnail","title","entry","createdAt","date","slice","tags","avatar","childImageSharp","gatsbyImageData","Peach","GatsbyImage","image","getImage","alt","src","getThumbnailImage","length","tag","recentText","thumbnailWrapper","wrapper"],"sourceRoot":""}